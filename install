#!/usr/bin/env bash
here=$(pwd)

set -e

cd "$(dirname "${BASH_SOURCE[0]}")"
base_dir=$(pwd)

echo "Update submodules ..."
git submodule update --init --recursive

function command-exists {
  command -v "$1" >/dev/null 2>&1
}

echo ""

if [ -z "${SKIP_PACKAGES+x}" ]; then  # if var is unset
  if command-exists pacman; then
    # Try to auto-install packages from list
    echo "Installing pacman packages ..."
    sudo pacman -Syu --needed - < pacman-pkglist-native.txt
    if ! command-exists trizen; then
      echo "Installing trizen to help with AUR packages..."
      cd /tmp
      git clone https://aur.archlinux.org/trizen.git
      cd trizen
      sudo makepkg -si
      cd "$base_dir"
    fi
    echo "Installing packages from AUR ..."
    trizen -S --needed - < pacman-pkglist-foreign.txt
  elif command-exists apt-get && grep -qw "Ubuntu" /etc/os-release; then
    source ./ubuntu-packages.sh
  fi

  if command-exists python3; then
    # Try auto-install packages from list
    sudo python3 -m pip install --upgrade pip
    python3 -m pip install --upgrade --user -r python-pkglist.txt
  fi
fi

deps=(zsh thefuck xclip awk vint ag)
# Make sure to have commands available
for cmd in "${deps[@]}"; do
  if ! command-exists "$cmd"; then
    echo "  - command $cmd not found."
  fi
done

if ! command-exists vim && ! command-exists nvim; then
  echo "Neither vim, nor neovim were found."
fi

echo ""

# Install everything that is not a hidden directory or starts with + using GNU Stow
find . -maxdepth 1 -type d -not -iregex "^\.\(/[.+].*\)?" | sed "s~./~~" | xargs -L1 stow

cd "$here"

if [ -n "${SHELL##*zsh*}" ]; then
  echo -e "To use ZSH as default shell please do:\n"
  echo "  chsh -s $(which zsh)"
  echo "  env zsh"
  echo "  source ~/.zshrc"
fi
